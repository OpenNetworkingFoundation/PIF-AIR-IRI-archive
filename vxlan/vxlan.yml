################################################################
#
# A simple encapsulation example for VXLAN
#
#
# Map VLAN to VNI
#
# Apply switching based on dest MAC address
#
# ACL table allows drop or rewrite of dest MACs
#
# Headers and parser are in separate files.
#
################################################################


################################################################
#
# ACTIONS
#
################################################################

decap_vxlan_a :
  type : action
  doc : "Remove the VXLAN header from the packet; save VNI"
  format : action_set
  implementation : >-
    modify_field(pkt_md.vni, vxlan.vni);
    remove_header(vxlan);

encap_vxlan_a :
  type : action
  doc : "Add a VXLAN header to the packet"
  format : action_set
  parameter_list :
    - eth_src
    - eth_dst
    - ip_src
    - ip_dst
    - udp_src
  implementation : >-
    add_header(outer_ethernet);
    modify_field(outer_ethernet.dst_mac, eth_dst);
    modify_field(outer_ethernet.src_mac, eth_src);
    modify_field(outer_ethernet.ethertype, 0x800);
    add_header(outer_ipv4);
    modify_field(outer_ipv4.src, ip_src);
    modify_field(outer_ipv4.dst, ip_dst);
    modify_field(outer_ipv4.version, 4);
    modify_field(outer_ipv4.ttl, 64);
    modify_field(outer_ipv4.protocol, 17);
    add_header(outer_udpipv4);
    modify_field(outer_udp.src_port, udp_src);
    modify_field(outer_udp.dst_port, 4789);
    modify_field(outer_udp.length, 0);
    add_header(vxlan);
    modify_field(vxlan.flags, 0x8);
    modify_field(vxlan.vni, pkt_md.vni);

set_vni_a :
  type : action
  doc : "Set the VNI in metadata"
  format : action_set
  parameter_list :
    - vni_id
  implementation : >-
    modify_field(pkt_md.vni, vni_id);

set_egress_a:
  type : action
  doc : "Set the destination for the packet"
  format : action_set
  parameter_list :
    - egress_spec
  implementation : >-
    modify_field(intrinsic_metadata.egress_specification, egress_spec);

drop_pkt_a:
  type : action
  doc : "Drop the packet"
  format : action_set
  implementation : >-
    modify_field(intrinsic_metadata.egress_specification, 0xffffffff);


################################################################
#
# TABLES
#
################################################################

# decap is only applied to packets with a VXLAN hdr on ingress
decap :
  type : table
  doc : "Remove the VXLAN and save VNI from the header"
  match_on :
    vxlan : valid
  allowed_actions :
    - decap_vxlan_a

# vni is only applied to packets without a VXLAN hdr on ingress
vni :
  type : table
  doc : "Map VLAN to VNI"
  match_on :
    inner_vlan_tag.vlan_id : ternary
  allowed_actions :
    - set_vni_a

# Forward is applied to all packets and operates on the inner header.
forward :
  type : table
  doc : "Forward based on L2 dest addr"
  match_on :
    pkt_md.vni : exact
    inner_ethernet.dst_mac : exact
  allowed_actions :
    - set_egress_a

# Encap runs on egress; it checks if the egress port is encap
encap :
  type : table
  doc : "Add a VXLAN header if going to an encap port"
  match_on :
    intrinsic_metadata.egress_port : exact
    # FIXME: This should support more params for selecting the encap
  allowed_actions :
    - encap_vxlan_a

################################################################
#
# CONTROL FLOW GRAPH
#
################################################################

ingress_flow :
  type : control_flow
  doc : "The control flow for ingress"
  format : dot
  implementation : >-
    digraph {
      decap -> vni [action=miss]
      decap -> forward [action=hit]
      vni -> forward [action=always]
      forward -> exit_control_flow [action=always]
    }

egress_flow :
  type : control_flow
  doc : "The control flow for egress"
  format : dot
  implementation : >-
    digraph {
      encap -> exit_control_flow [action=always]
    }


################################################################
#
# TRAFFIC MANAGER
#
################################################################

tm_queues :
  type : traffic_manager
  doc : "The central traffic manager"
  queues_per_port : 8
  dequeue_discipline : strict


################################################################
#
# Table initialization
#
# - <table>               # table to which to add entry
#     match_values :      # Map of field refs to values
#     match_masks :       # Optional map for ternary matches
#     action :            # Name of action to use
#     action_params :     # Map of parameter name to value
#
# If no match is specified, it is added as a default entry
#
################################################################

table_initialization :
  - decap:
      match_values :
        vxlan : 1 # Just means the vxlan header is valid
      action : decap_vxlan_a
  - vni :
      match_values :
        vlan_tag.vlan_id : 10
      action : set_vni_a
      action_params :
        vni_id : 100
  - vni :
      match_values :
        vlan_tag.vlan_id : 20
      action : set_vni_a
      action_params :
        vni_id : 200
  - vni : # Default action
      action : set_vni_a
      action_params :
        vni_id : 0xffff
  - forward :
      match_values :
        pkt_md.vni : 100
        inner_ethernet.dst_mac : 40
      action : set_egress_a
      action_params :
        egress_spec : 2 # Should encap
  - forward :
      match_values :
        pkt_md.vni : 200
        inner_ethernet.dst_mac : 40
      action : set_egress_a
      action_params :
        egress_spec : 3 # Should not encap
